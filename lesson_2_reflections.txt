1. What happens when you initialize a repository? Why do you need to do it?
Answer: it will create .git directory which contains config of the git repository. We need to do this in order to create new git repo

2. How is the staging area different from the working directory and the repository? What value do you think it offers?
Answer: it keeps files which we want to commit but we're not really sure that it works.

3. How can you use the staging area to make sure you have one commit per logical change?
Answer: we can add several file changes to staging area before we conduct a commit, hence we don't mix up changes on different logical problems

4. What are some situations when branches would be helpful in keeping your history organized? How would branches help?
Answer: when we have several work in progress by different member of the team. When the changes are done, we merge the branch and get the combined version.

5. How do the diagrams help you visualize the branch structure?
Answer: it helps to trace back the history of a branch - which commits does it include.

6. What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
Answer: combined file versions between the two branches.

7. What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
Answer: Automatic merging enables us not to check on the merged versions, which saves time. Manual merge involves human-understanding and takes time, but it is useful when the merged versions are on the same section of the file

